apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'

android {
    def mainConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion mainConfig.getAt("compileSdkVersion")
    buildToolsVersion mainConfig.getAt("buildToolsVersion")

    defaultConfig {
        minSdkVersion mainConfig.getAt("minSdkVersion")
        targetSdkVersion mainConfig.getAt("targetSdkVersion")
        versionCode mainConfig.getAt("androidVersionCode")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'
        disable 'OldTargetApi'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {

    def data = rootProject.ext.dataLayerDependencies
    def common = rootProject.ext.commonDependencies

    //common
    compile common.kotlin
    compile common.rxkotlin
    compile common.rxjava
    compile common.rxandroid
    provided common.javaxAnnotation

    //parent layer
    compile data.gson
    compile data.retrofit2
    compile data.okhttp3
    compile data.retrofit2Converter
    compile data.retrofit2Adapter
    //modules
    compile project(':domain')
}

buildscript {
    ext.kotlin_version = '1.0.1'
    ext.realm_version = '0.88.2'
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.realm:realm-gradle-plugin:$realm_version"
    }
}
